name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test and Type Check
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up test environment
      run: |
        echo "MONGODB_URL=mongodb://admin:password@localhost:27017/test_recipes_db?authSource=admin" > .env
        echo "DATABASE_NAME=test_recipes_db" >> .env
        echo "LOG_LEVEL=INFO" >> .env
        echo "USE_STRUCTURED_LOGGING=true" >> .env
        echo "ENVIRONMENT=test" >> .env
        
    - name: Wait for MongoDB
      run: |
        for i in {1..30}; do
          if mongosh --host localhost:27017 --username admin --password password --authenticationDatabase admin --eval "db.adminCommand('ping')" --quiet; then
            echo "MongoDB is ready"
            break
          fi
          echo "Waiting for MongoDB... ($i/30)"
          sleep 2
        done
        
    - name: Run mypy type checking
      run: |
        mypy app/ --ignore-missing-imports --no-strict-optional || echo "MyPy check completed with issues - non-blocking"
        
    - name: Run tests
      run: |
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing --tb=short
      env:
        MONGODB_URL: mongodb://admin:password@localhost:27017/test_recipes_db?authSource=admin
        DATABASE_NAME: test_recipes_db
        LOG_LEVEL: INFO
        USE_STRUCTURED_LOGGING: "true"
        ENVIRONMENT: test
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Run JavaScript validation
      run: |
        python validate_js.py || echo "JavaScript validation completed with issues - non-blocking"